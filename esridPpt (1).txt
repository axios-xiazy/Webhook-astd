-- Wait for game to load
repeat wait() until game:IsLoaded()

-- Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")

-- Wave tracking
local Wave = ReplicatedStorage:WaitForChild("Wave")

-- Modules
local InventoryMod = require(ReplicatedStorage.Mods.InventoryMod)

-- Configuration
local CONFIG = {
    WEBHOOK_URL = _G.WebhookLink,
    COLORS = {
        VICTORY = 0x00FF00,    -- ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ä‡∏±‡∏¢‡∏ä‡∏ô‡∏∞
        DEFEAT = 0xFF0000,     -- ‡πÅ‡∏î‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏û‡πà‡∏≤‡∏¢‡πÅ‡∏û‡πâ
        DEFAULT = 0x7289DA,    -- ‡∏™‡∏µ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
        CHARACTER_DROP = 0xFFD700, -- ‡∏ó‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏£‡∏≠‡∏õ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£
        SPECIAL = 0xFF00FF     -- ‡∏™‡∏µ‡∏°‡πà‡∏ß‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏û‡∏¥‡πÄ‡∏®‡∏©
    },
    ICONS = {
        TIME = "‚è±Ô∏è",
        DAMAGE = "üí•",
        ELIMINATIONS = "‚öîÔ∏è",
        WORLD = "üåç",
        CHAPTER = "üìñ",
        XP = "‚ú®",
        REWARDS = "üéÅ",
        VICTORY = "üèÜ",
        DEFEAT = "üò¢",
        SUMMARY = "üìä",
        WAVE = "üåä",
        CHARACTER = "ü¶∏‚Äç‚ôÇÔ∏è",
        DIFFICULTY = "üéØ",
        PLAYERS = "üë•",
        GEMS = "üíé"
    }
}

-- Utility Functions
local Utils = {}

function Utils.formatTime(seconds)
    local fraction = seconds - math.floor(seconds)
    local totalSeconds = math.floor(seconds)
    local hours = math.floor(totalSeconds / 3600)
    local minutes = math.floor((totalSeconds % 3600) / 60)
    local secs = (totalSeconds % 60) + fraction

    if hours > 0 then
        return string.format("%d ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á %02d ‡∏ô‡∏≤‡∏ó‡∏µ %05.2f ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ", hours, minutes, secs)
    elseif minutes > 0 then
        return string.format("%d ‡∏ô‡∏≤‡∏ó‡∏µ %05.2f ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ", minutes, secs)
    else
        return string.format("%05.2f ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ", secs)
    end
end

function Utils.formatNumber(number)
    local formatted = tostring(number)
    while true do
        formatted, k = string.gsub(formatted, "^(-?%d+)(%d%d%d)", '%1,%2')
        if k == 0 then break end
    end
    return formatted
end

function Utils.getItemAmount(itemName)
    for _, item in pairs(InventoryMod.Get()) do
        if item.Name == itemName then
            return item.Amount
        end
    end
    return 0
end

function Utils.getDifficultyName(difficulty)
    local difficultyMap = {
        ["Easy"] = "‡∏á‡πà‡∏≤‡∏¢",
        ["Normal"] = "‡∏õ‡∏Å‡∏ï‡∏¥",
        ["Hard"] = "‡∏¢‡∏≤‡∏Å",
        ["Extreme"] = "‡∏™‡∏∏‡∏î‡∏Ç‡∏µ‡∏î"
    }
    return difficultyMap[difficulty] or difficulty or "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏£‡∏∞‡∏î‡∏±‡∏ö"
end

function Utils.getPlayerCount()
    return #Players:GetPlayers()
end

-- Webhook Functions
local Webhook = {}

function Webhook.createEmbed(gameData, gems)
    local info = gameData.Info
    local result = info.Result
    local isVictory = result.Win

    local totalTime = result.Description[1] and result.Description[1].V or 0
    local currentWave = Wave.Value
    local difficulty = info.Difficulty or "Unknown"
    local playerCount = Utils.getPlayerCount()

    local summaryLines = {
        string.format("%s **‡∏≠‡∏±‡∏ç‡∏°‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö:** %s", CONFIG.ICONS.GEMS, Utils.formatNumber(gems or 0)),
        string.format("%s **‡πÇ‡∏•‡∏Å:** %s", CONFIG.ICONS.WORLD, info.World.DisplayName),
        string.format("%s **‡∏ö‡∏ó‡∏ó‡∏µ‡πà %d** ‚Äî *%s*", CONFIG.ICONS.CHAPTER, info.Chapter.Chapter, info.Chapter.Name),
        string.format("%s **‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏Å:** %s", CONFIG.ICONS.DIFFICULTY, Utils.getDifficultyName(difficulty)),
        string.format("%s **‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô:** %s", CONFIG.ICONS.PLAYERS, Utils.formatNumber(playerCount)),
        string.format("%s **‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:** %s", CONFIG.ICONS.TIME, Utils.formatTime(totalTime)),
        string.format("%s **‡πÄ‡∏ß‡∏ü‡∏ó‡∏µ‡πà‡πÑ‡∏õ‡∏ñ‡∏∂‡∏á:** %s", CONFIG.ICONS.WAVE, Utils.formatNumber(currentWave)),
        string.format("%s **XP ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö:** %s", CONFIG.ICONS.XP, Utils.formatNumber(result.XP))
    }

    for _, stat in ipairs(result.Description) do
        if stat.N == "Total DMG" then
            table.insert(summaryLines, string.format("%s **‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:** %s", CONFIG.ICONS.DAMAGE, Utils.formatNumber(stat.V)))
        elseif stat.N == "Eliminations" then
            table.insert(summaryLines, string.format("%s **‡∏®‡∏±‡∏ï‡∏£‡∏π‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏à‡∏±‡∏î:** %s", CONFIG.ICONS.ELIMINATIONS, Utils.formatNumber(stat.V)))
        end
    end

    local characterLines = {}
    local itemLines = {}
    local currencyLines = {}
    local hasCharacterDrop = false

    for _, reward in ipairs(result.Rewards) do
        local rewardName = reward.Name or reward.Type or "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏ä‡∏∑‡πà‡∏≠"
        local currentAmount = Utils.getItemAmount(rewardName)
        local rewardText = string.format("%s **%s** √ó%s *(‡∏£‡∏ß‡∏°‡πÉ‡∏ô‡∏Ñ‡∏•‡∏±‡∏á: %s)*",
            CONFIG.ICONS.REWARDS, rewardName, Utils.formatNumber(reward.Amount), Utils.formatNumber(currentAmount))

        if reward.Type == "Character" then
            hasCharacterDrop = true
            table.insert(characterLines, string.format("%s **‡∏î‡∏£‡∏≠‡∏õ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏™‡∏∏‡∏î‡∏û‡∏¥‡πÄ‡∏®‡∏©! %s** √ó%s *(‡∏£‡∏ß‡∏°: %s)*",
                CONFIG.ICONS.CHARACTER, rewardName, Utils.formatNumber(reward.Amount), Utils.formatNumber(currentAmount)))
        elseif reward.Type == "Currency" then
            table.insert(currencyLines, rewardText)
        else
            table.insert(itemLines, rewardText)
        end
    end

    local gameStatus = isVictory and
        string.format("%s **‡∏ä‡∏±‡∏¢‡∏ä‡∏ô‡∏∞‡∏≠‡∏±‡∏ô‡∏¢‡∏¥‡πà‡∏á‡πÉ‡∏´‡∏ç‡πà!** ‚úÖ", CONFIG.ICONS.VICTORY) or
        string.format("%s **‡∏û‡πà‡∏≤‡∏¢‡πÅ‡∏û‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πà‡∏≤‡πÄ‡∏™‡∏µ‡∏¢‡∏î‡∏≤‡∏¢** ‚ùå", CONFIG.ICONS.DEFEAT)

    local embedColor = hasCharacterDrop and CONFIG.COLORS.CHARACTER_DROP or
                      (isVictory and CONFIG.COLORS.VICTORY or CONFIG.COLORS.DEFEAT)

    local embed = {
        title = string.format("üî• ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ‡∏™‡∏∏‡∏î‡∏¢‡∏¥‡πà‡∏á‡πÉ‡∏´‡∏ç‡πà ‚Äî %s üî•", Players.LocalPlayer.Name),
        description = string.format("**%s**\n*üåå %s ‚Äî %s*",
            gameStatus, info.World.DisplayName, Utils.getDifficultyName(difficulty)),
        color = embedColor,
        fields = {
            {
                name = string.format("%s ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ", CONFIG.ICONS.SUMMARY),
                value = table.concat(summaryLines, "\n"),
                inline = false
            }
        },
        author = {
            name = "üåü All Star Tower Defense X ‚Ä¢ ‡∏Ç‡∏±‡∏ö‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÇ‡∏î‡∏¢ Jimi Hub üåü",
            icon_url = "https://media.discordapp.net/attachments/1110521196639944735/1383812269821005915/jimi.png"
        },
        thumbnail = {
            url = "https://tr.rbxcdn.com/180DAY-36ee10a9d4eaa65eedf17feb2b87cc04/256/256/Image/Webp/noFilter"
        },
        footer = {
            text = string.format("üïí ‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠ %s", os.date("%Y-%m-%d %H:%M:%S UTC")),
            icon_url = "https://cdn.discordapp.com/emojis/1234567890123456789.png"
        },
        timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
    }

    -- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ó‡∏µ‡πà‡∏î‡∏£‡∏≠‡∏õ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    if hasCharacterDrop then
        table.insert(embed.fields, {
            name = string.format("%s ‚ú® ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏™‡∏∏‡∏î‡∏´‡∏≤‡∏¢‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö! ‚ú®", CONFIG.ICONS.CHARACTER),
            value = table.concat(characterLines, "\n") or "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£",
            inline = false
        })
    end

    -- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô
    if #currencyLines > 0 then
        table.insert(embed.fields, {
            name = string.format("%s ‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö", CONFIG.ICONS.GEMS),
            value = table.concat(currencyLines, "\n"),
            inline = false
        })
    end

    -- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
    table.insert(embed.fields, {
        name = string.format("%s ‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö", CONFIG.ICONS.REWARDS),
        value = #itemLines > 0 and table.concat(itemLines, "\n") or "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏≠‡∏∑‡πà‡∏ô",
        inline = false
    })

    return embed
end

function Webhook.send(embed)
    local payload = {
        content = hasCharacterDrop and "üéâ **‡∏î‡∏£‡∏≠‡∏õ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏™‡∏∏‡∏î‡∏û‡∏¥‡πÄ‡∏®‡∏©!** ‡∏°‡∏≤‡∏î‡∏π‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ‡∏™‡∏∏‡∏î‡∏¢‡∏¥‡πà‡∏á‡πÉ‡∏´‡∏ç‡πà! üéâ" or nil,
        embeds = { embed },
        attachments = {}
    }

    local success, response = pcall(function()
        local requestFunc = syn and syn.request or request
        return requestFunc({
            Url = _G.WebhookLink,
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = HttpService:JSONEncode(payload)
        })
    end)

    if not success then
        warn("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á webhook ‡πÑ‡∏î‡πâ:", response)
    end
end

-- Main Event Handler
local function handleGameResult(eventData)
    if eventData.Type == "Game" and
       eventData.Mode == "Result" and
       _G.WebhookResultEnd and
       not _G.dbwebhook then

        -- Get Gems data right at result
        local args = {
            {
                Type = "AFK",
                Mode = "Get"
            }
        }
        local GemsData = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("GetFunction"):InvokeServer(unpack(args))

        _G.dbwebhook = true
        _G.Result = eventData
        _G.GameStatus = eventData.Info.Result.Win and "Victory" or "Defeat"

        local embed = Webhook.createEmbed(eventData, GemsData and GemsData.Cash or 0)
        Webhook.send(embed)

        spawn(function()
            wait(3)
            _G.dbwebhook = nil
        end)
    end
end

-- Connect to game events
ReplicatedStorage.Remotes.UpdateEvent.OnClientEvent:Connect(handleGameResult)

print("‡∏£‡∏∞‡∏ö‡∏ö webhook ASTD X ‡∏™‡∏∏‡∏î‡∏≠‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! üåü JIMI HUB X CLAUDE AI üåü")
